name: docker
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  npm-install:
    strategy:
      matrix:
        version: [20, lts/*]
        os: [ubuntu-latest, ubuntu-22.04]
        include:
          - os: ubuntu-latest
            version: 18
    runs-on: ${{ matrix.os }}
    steps:
        - name: checkout
          uses: actions/checkout@v4
        - name : setup node
          uses: actions/setup-node@v4
          with:
            node-version: ${{ matrix.version }}
        - uses: actions/cache@v4
          with:
            path: ./node_modules
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-node-
        - name: run install
          shell: bash
          run: |
            npm install

  test:
    needs: npm-install
    strategy:
      matrix:
        version: [20, lts/*]
        os: [ubuntu-latest, ubuntu-22.04]
        include:
          - os: ubuntu-latest
            version: 18

    runs-on: ${{ matrix.os }}
    steps:
        - name: checkout
          uses: actions/checkout@v4
        - name : setup node
          uses: actions/setup-node@v4
          with:
            node-version: ${{ matrix.version }}
        - uses: actions/cache@v4
          with:
            path: ./node_modules
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-node-
        - name: run test
          shell: bash
          run: |
            npm test

  docker-build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' && github.event_name == 'push'
    steps:
        - name: checkout
          uses: actions/checkout@v4
          
        - name: Pull Docker Image
          run: |
            docker pull docker/whalesay
    
        - name: Run Docker Container
          run: |
            docker run --name whalesay_container docker/whalesay cowsay "Hello, GitHub Actions!"